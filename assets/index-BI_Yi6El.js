var e=Object.defineProperty,t=(t,r,s)=>(((t,r,s)=>{r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s})(t,"symbol"!=typeof r?r+"":r,s),s);import{a5 as r}from"./vendor-bZbVrpZz.js";const s=new Map,n=e=>[e.url,e.method].join(":");class o{addPending(e){this.removePending(e);const t=n(e),r=new AbortController;e.signal=r.signal,s.has(t)||s.set(t,r)}removePending(e){const t=n(e);if(s.has(t)){const e=s.get(t);null==e||e.abort(),s.delete(t)}}removeAllPending(){s.forEach((e=>{e.abort()})),this.clear()}clear(){s.clear()}}class i{retry(e,t){const r=t.config,{waitTime:s,count:n}=r.retryConfig??{};return r.currentCount=r.currentCount??0,r.currentCount>=n?Promise.reject(t):(r.currentCount++,this.wait(s).then((()=>e(r))))}wait(e){return new Promise((t=>setTimeout(t,e)))}}const a={requestInterceptors:e=>e,requestInterceptorsCatch:e=>e,responseInterceptor:e=>e,responseInterceptorsCatch(e,t){var s;let n="ECONNABORTED"===t.code?"请求超时":void 0;if(r.isCancel(t))return Promise.reject(t);!function(e,t,r){let s=t??"";switch(e){case 400:s="客户端错误，请求格式或参数有误！";break;case 401:s="身份认证不通过";break;case 403:s="用户得到授权，但是访问是被禁止的!";break;case 404:s="未找到目标资源!";break;case 500:s="服务器错误!";break;case 503:s="服务器错误！"}s.length>0&&r(`checkStatus: ${s}`)}(null==(s=t.response)?void 0:s.status,n,(e=>{}));return(new i).retry(e,t)}},c=new class{constructor(e){t(this,"axiosInstance"),t(this,"options"),t(this,"interceptors"),this.axiosInstance=r.create(e),this.options=e,this.interceptors=e.interceptors,this.setInterceptors()}setInterceptors(){if(!this.interceptors)return;const{requestInterceptors:e,requestInterceptorsCatch:t,responseInterceptor:r,responseInterceptorsCatch:s}=this.interceptors,n=new o;this.axiosInstance.interceptors.request.use((t=>(((null==t?void 0:t.abortRepetitiveRequest)??this.options.abortRepetitiveRequest)&&n.addPending(t),e&&(t=e(t)),t)),t??void 0),this.axiosInstance.interceptors.response.use((e=>(e&&n.removePending(e.config),r&&(e=r(e)),this.options.directlyGetData&&(e=e.data),e)),(e=>s?s(this.axiosInstance,e):e))}request(e){return new Promise(((t,r)=>{this.axiosInstance.request(e).then((e=>t(e.data))).catch((e=>r(e)))}))}get(e){return this.request({...e,method:"GET"})}post(e){return this.request({...e,method:"POST"})}put(e){return this.request({...e,method:"PUT"})}delete(e){return this.request({...e,method:"DELETE"})}}({directlyGetData:!1,baseURL:"/api",timeout:3e3,interceptors:a,abortRepetitiveRequest:!0,retryConfig:{count:1,waitTime:500}});export{c as u};
//# sourceMappingURL=index-BI_Yi6El.js.map
