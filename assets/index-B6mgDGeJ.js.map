{"version":3,"file":"index-B6mgDGeJ.js","sources":["../../src/utils/navigate.ts","../../src/store/setting.ts","../../src/views/Layout/LayoutHeader.vue","../../src/views/Layout/LayoutSider.vue","../../src/views/Layout/index.vue"],"sourcesContent":["import router from '@/router'\nexport const navigate = (path: any) => {\n  router.push({path})\n}","import { defineStore } from \"pinia\";\r\n\r\nexport const useSetting = defineStore('setting', {\r\n  state: () => ({\r\n    collapsed: false,\r\n  })\r\n})","<template>\n  <div class=\"box flex flex-row-between\">\n    <div class=\"\" @click=\"clickCollapsed\">\n      <MenuFoldOutlined style=\"font-size: 20px;\" v-if=\"setting.collapsed\" />\n      <MenuUnfoldOutlined style=\"font-size: 20px;\" v-else />\n    </div>\n    <div class=\"menu\">\n      <div v-for=\"item in menuRoutes\" :key=\"item.path\" @click=\"goRouter(item)\" class=\"item flex-center\"\n        :class=\"item.path === route.path ? 'active' : ''\">\n        {{ item.meta?.title }}\n      </div>\n    </div>\n    <div class=\"search flex-center\">\n      <SearchOutlined style=\"font-size: 20px;\" @click=\"goRouter({path: '/search'})\" />\n\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons-vue'\nimport { menuRoutes } from '@/router/routes'\nimport { navigate } from '@/utils/navigate'\nimport { useRoute } from 'vue-router'\nimport { useSetting } from '@/store/setting'\nconst setting = useSetting()\nconst route = useRoute()\nconst clickCollapsed = () => {\n  setting.collapsed = !setting.collapsed\n}\nconst goRouter = (value: any) => {\n  navigate(value.path)\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.menu {\n  display: flex;\n\n  .item {\n    padding: 0 20px;\n    cursor: pointer;\n    color: #FFF;\n  }\n\n  .active {\n    color: red;\n  }\n}\n</style>","<template>\n  <div class=\"box\">\n    <div class=\"user-icon\">\n      <a-avatar src=\"user-ic.png\" :size=\"80\" />\n    </div>\n    <div class=\"user-name\">xiehongchen</div>\n    <div class=\"user-info flex flex-row-around\">\n      <div class=\"item\">\n        <div class=\"title\">文章</div>\n        <div class=\"count\">{{ article.articleNum }}</div>\n      </div>\n      <div class=\"item\">\n        <div class=\"title\">项目</div>\n        <div class=\"count\">{{ article.projectNum }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useArticle } from '@/store/article'\nconst article = useArticle()\n</script>\n\n<style lang=\"scss\" scoped>\n.box {\n  margin-top: 50px;\n  background-color: #FFF;\n  border-radius: 10px;\n  padding: 30px;\n  width: 200px;\n  .user-icon {\n    cursor: pointer;\n    border-radius: 50%;\n    overflow: hidden;\n    width: 80px;\n    height: 80px;\n    margin: 0 auto;\n    background: #ebeef5;\n    transition: transform 1s ease;\n    &:hover {\n      transform: rotate(360deg);\n    }\n  }\n  .user-name {\n    margin-top: 10px;\n    font-size: 25px;\n    color: #000;\n  }\n  .user-info {\n    margin-top: 20px;\n    .item {\n      .title {\n        font-size: 14px;\n        color: #666;\n      }\n      .count {\n        font-size: 20px;\n        color: #000;\n      }\n    }\n  }\n}\n</style>","<script setup lang=\"ts\">\nimport LayoutHeader from './LayoutHeader.vue'\nimport LayoutSider from './LayoutSider.vue';\nimport { useSetting } from '@/store/setting'\nconst setting = useSetting()\nconst collapsed = computed(() => setting.collapsed)\n</script>\n\n<template>\n  <a-layout class=\"layout\">\n    <div class=\"bg-image\">\n    </div>\n    <a-layout-header class=\"header\">\n      <LayoutHeader />\n    </a-layout-header>\n    <a-layout>\n      <a-layout-sider width=\"300\" v-model:collapsed=\"collapsed\" :trigger=\"null\" collapsible :collapsedWidth=\"0\" class=\"sider flex-center\">\n        <LayoutSider />\n      </a-layout-sider>\n      <a-layout-content class=\"content\">\n        <router-view></router-view>\n      </a-layout-content>\n    </a-layout>\n  </a-layout>\n</template>\n\n<style scoped lang=\"scss\">\n.layout {\n  position: relative;\n  .bg-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('/preview.jpg');\n    background-size: cover;\n    background-position: center;\n  }\n}\n\n.header {\n  height: $base-menu-height;\n  background-color: transparent;\n  position: relative;\n\n}\n\n.sider {\n  text-align: center;\n  background-color: transparent;\n  width: 500px;\n}\n\n.content {\n  padding: 20px;\n  height: calc(100vh - $base-menu-height);\n  background-color: transparent;\n  position: relative;\n}\n</style>\n"],"names":["useSetting","defineStore","state","collapsed","setting","route","useRoute","clickCollapsed","goRouter","value","path","router","push","article","useArticle","computed"],"mappings":"uRACa,MCCAA,EAAaC,EAAY,UAAW,CAC/CC,MAAO,KAAO,CACZC,WAAW,gJCqBf,MAAMC,EAAUJ,IACVK,EAAQC,IACRC,EAAiB,KACbH,EAAAD,WAAaC,EAAQD,SAAA,EAEzBK,EAAYC,IF7BM,IAACC,IE8BdD,EAAMC,KF7BRC,EAAAC,KAAK,CAACF,QE6BM,03BCVrB,MAAMG,EAAUC,sXCjBhB,MAAMV,EAAUJ,IACVG,EAAYY,GAAS,IAAMX,EAAQD"}