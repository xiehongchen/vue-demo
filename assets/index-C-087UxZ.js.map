{"version":3,"mappings":"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","names":["_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","routes","views","path","match","push","component","__vitePreload","import","router","createRouter","history","createWebHashHistory","scrollBehavior","left","top","store","createPinia","resultSuccess","data","Mock","mock","code","message","success","axiosModule","url","method","timeout","response","getHobbysList","num","list","arr","length","index","Math","floor","random","includes","personModule","query","current","pageSize","status","name","params","i","id","phone","startTime","endTime","createTime","address","avatar","Random","image","color","first","date","time","Number","hobbys","getTableListData","total","records","body","ids","app","createApp","App","key","Object","entries","ElementPlusIconsVue","use","pinia","mount","createProdMockServer"],"sources":["../../src/App.vue","../../src/router/index.ts","../../src/store/index.ts","../../src/mock/_utils.ts","../../src/mock/axios/index.ts","../../src/mock/person/index.ts","../../src/main.ts","../../src/mock/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\n\n</script>\n\n<template>\n  <div class=\"app\">\n    <router-link to=\"/table\">useTable-表格</router-link>\n    <router-link to=\"/table2\">封装-表格</router-link>\n    <router-link to=\"/axios\">axios封装</router-link>\n    <router-link to=\"/form\">表单-封装</router-link>\n    <router-link to=\"/page\">分页-封装</router-link>\n    <router-link to=\"/color\">前端换肤</router-link>\n    <router-link to=\"/router\">简易router</router-link>\n    <router-view></router-view>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\na {\n  margin-right: 20px;\n}\n</style>\n","/*\n * @Author: xiehongchen 1754581057@qq.com\n * @Date: 2024-03-04 15:06:00\n * @LastEditors: xiehongchen 1754581057@qq.com\n * @LastEditTime: 2024-03-04 16:11:33\n * @FilePath: /vue-demo/src/router/index.ts\n * @Description: \n * 认真学习每一天\n */\nimport { createRouter, createWebHashHistory, type RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = []\n\nconst views = import.meta.glob('./../views/*.vue')\nfor (const path in views) {\n  const match = path.match(/(\\/[^/]+)\\.vue$/) as string[]\n  routes.push({\n    path: match[1],\n    // /* @vite-ignore */抑制警告\n    component: () => import(/* @vite-ignore */`${path}`)\n  })\n}\n\nconsole.log('routes', routes)\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  scrollBehavior: () => ({ left: 0, top: 0 })\n})\n\nexport default router","import { createPinia } from 'pinia'\nconst store = createPinia()\n\nexport default store","/*\n * @Author: xiehongchen 1754581057@qq.com\n * @Date: 2024-03-05 10:27:12\n * @LastEditors: xiehongchen 1754581057@qq.com\n * @LastEditTime: 2024-03-05 10:27:29\n * @FilePath: /vue-demo/src/mock/_utils.ts\n * @Description: \n * 认真学习每一天\n */\nimport Mock from 'mockjs'\n\n/** 返回成功数据 */\nexport const resultSuccess = (data: unknown) => {\n  return Mock.mock({\n    code: 200,\n    data,\n    message: '请求成功',\n    success: true\n  })\n}\n\n/** 返回失败数据 */\nexport const resultError = (data: unknown, message: string, code = 500) => {\n  return Mock.mock({\n    code,\n    data,\n    message,\n    success: false\n  })\n}","import type { MockMethod } from 'vite-plugin-mock'\nimport { resultSuccess } from '../_utils'\n\nexport default [\n  {\n    url: '/api/a',\n    method: 'get',\n    timeout: 300,\n    response: () => {\n      const data = {}\n      return resultSuccess(data)\n    }\n  }\n] as MockMethod[]","import { Random } from 'mockjs'\nimport Mock from 'mockjs'\nimport type { MockMethod } from 'vite-plugin-mock'\nimport { resultSuccess } from '../_utils'\n\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\nexport function doCustomTimes(times: number, callback: any) {\n  let i = -1\n  while (++i < times) {\n    callback(i)\n  }\n}\n\n// 获取兴趣爱好\nconst getHobbysList = (num: number) => {\n  const list = ['篮球', '羽毛球', '足球', '音乐', '电影', '旅行', '高尔夫', '爬山', '游泳', '健身']\n  const arr: string[] = []\n  while (arr.length < num) {\n    const index = Math.floor(Math.random() * list.length)\n    if (!arr.includes(list[index])) {\n      arr.push(list[index])\n    }\n  }\n  return arr\n}\n\nconst getTableListData = (params: any) => {\n  const data: any[] = []\n  for (let i = 0; i < params.pageSize; i++) {\n    data.push({\n      id: '@integer(10,999999)',\n      index: i,\n      name: params.name !== '' ? params.name : '@cname()',\n      phone: '15578728810',\n      startTime: '@datetime',\n      endTime: '@datetime',\n      createTime: '@datetime',\n      address: '@county(true)',\n      avatar: Random.image('400x400', Random.color(), Random.color(), Random.first()),\n      date: `@date('yyyy-MM-dd')`,\n      time: `@time('HH:mm')`,\n      'proportion|1-100': 10,\n      'no|100000-10000000': 100000,\n      status: params.status != '' ? Number(params.status) : Math.random() > 0.5 ? 1 : 0, // 0或1\n      color: Mock.mock('@hex'),\n      hobbys: getHobbysList(Math.floor(Math.random() * 9))\n    })\n  }\n  return data\n}\n\nexport default [\n  {\n    url: '/api/person/list',\n    method: 'get',\n    timeout: 350,\n    response: ({ query }) => {\n      const { current = 1, pageSize = 10, status = 0, name = '' } = query\n      const list = getTableListData({ current, pageSize, status, name })\n      return resultSuccess({\n        total: 1000,\n        records: list\n      })\n    }\n  },\n  {\n    url: '/api/person/delete',\n    method: 'post',\n    timeout: 350,\n    response: ({ body }) => {\n      const { ids } = body\n      return resultSuccess(ids)\n    }\n  }\n] as MockMethod[]\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport pinia from './store'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\n\nconst app = createApp(App)\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\napp.use(pinia)\napp.use(router)\napp.mount('#app')\n","/*\n * @Author: xiehongchen 1754581057@qq.com\n * @Date: 2024-03-04 18:31:39\n * @LastEditors: xiehongchen 1754581057@qq.com\n * @LastEditTime: 2024-03-05 10:24:29\n * @FilePath: /vue-demo/src/mock/index.ts\n * @Description: \n * 认真学习每一天\n */\n\nimport { createProdMockServer } from 'vite-plugin-mock/es/createProdMockServer'\nimport axiosModule from './axios/index'\nimport personModule from './person/index'\n\nexport function setupProdMockServer() {\n  createProdMockServer([\n    ...axiosModule,\n    ...personModule\n  ])\n}"],"file":"assets/index-C-087UxZ.js"}